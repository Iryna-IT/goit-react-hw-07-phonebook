{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/App.module.css","redux/items/items-actions.js","redux/items/items-reducers.js","redux/filter/filter-actions.js","redux/filter/filter-reducers.js","redux/contactsReducer.js","redux/store.js","redux/items/items-operations.js","redux/items/items-selectors.js","functions/isUnique.js","components/ContactForm/ContactForm.jsx","redux/filter/filter-operations.js","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","components/App.jsx","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","items","createReducer","_","payload","state","filter","id","loading","error","filterContacts","filterActions","combineReducers","itemsReducers","filterReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contacts","contactsReducer","devTools","process","axios","defaults","baseURL","dispatch","a","get","data","newContact","contact","name","number","post","contactId","delete","getExistContacts","getLoading","getContactsListToShow","createSelector","item","toUpperCase","includes","isUnique","searchName","console","log","find","ContactForm","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onAdd","existContacts","alert","reset","className","styles","form_contact","onSubmit","this","htmlFor","label_contact","type","input_contact","placeholder","onChange","required","pattern","btn_add","Component","defaultProps","connect","itemsSelectors","itemsOperations","Filter","onSearch","form_search","label_search","input_search","event","filterOperations","ContactList","fetchContacts","onDelete","length","contact_list","map","Contact","handleDelete","target","parentNode","contact_item","btn_delete","onClick","App","app","isLoadingContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.12e92696.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label_contact\":\"ContactForm_label_contact__2HU0c\",\"input_contact\":\"ContactForm_input_contact__1wa3Y\",\"form_contact\":\"ContactForm_form_contact__Qwzt8\",\"btn_add\":\"ContactForm_btn_add__2o-Nz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_search\":\"Filter_form_search__2Wi6v\",\"label_search\":\"Filter_label_search__D8RdX\",\"input_search\":\"Filter_input_search__1bgKr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_list\":\"ContactList_contact_list__1otrg\",\"contact_item\":\"ContactList_contact_item__3WONi\",\"btn_delete\":\"ContactList_btn_delete__68iwW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2aluA\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction('items/fetchContactsRequest');\r\nexport const fetchContactsSuccess = createAction('items/fetchContactsSuccess');\r\nexport const fetchContactsError = createAction('items/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('items/addContactRequest');\r\nexport const addContactSuccess = createAction('items/addContactSuccess');\r\nexport const addContactError = createAction('items/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('items/deleteContactRequest');\r\nexport const deleteContactSuccess = createAction('items/deleteContactSuccess');\r\nexport const deleteContactError = createAction('items/deleteContactError');\r\n","import { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './items-actions';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [payload, ...state],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {});\r\n\r\nexport default { items, loading, error };\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst filterContacts = createAction('filter/filterContacts', filter => ({\r\n  payload: filter,\r\n}));\r\n\r\nexport default { filterContacts };\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport filterActions from './filter-actions';\r\n\r\nconst filter = createReducer('', {\r\n  [filterActions.filterContacts]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default filter;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport itemsReducers from '../redux/items/items-reducers';\r\nimport filterReducer from '../redux/filter/filter-reducers';\r\n\r\nexport default combineReducers({\r\n  items: itemsReducers.items,\r\n  filter: filterReducer,\r\n  loading: itemsReducers.loading,\r\n  error: itemsReducers.error,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  // persistStore,\r\n  // persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n// import storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from '../redux/contactsReducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;\r\n\r\n// ===============Persit=======================\r\n// const contactsPersistConfig = {\r\n//   key: 'contacts',\r\n//   storage,\r\n//   blacklist: ['filter'],\r\n// };\r\n\r\n// const store = configureStore({\r\n//   reducer: {\r\n//     contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n//   },\r\n//   middleware,\r\n//   devTools: process.env.NODE_ENV === 'development',\r\n// });\r\n\r\n// const persistor = persistStore(store);\r\n\r\n// export default { store, persistor };\r\n","import axios from 'axios';\r\n\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './items-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040/';\r\n\r\nconst fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error));\r\n  }\r\n};\r\n\r\nconst addContact = newContact => async dispatch => {\r\n  const contact = { name: newContact.name, number: newContact.number };\r\n  dispatch(addContactRequest());\r\n\r\n  try {\r\n    const { data } = await axios.post('/contacts', contact);\r\n\r\n    dispatch(addContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(addContactError(error));\r\n  }\r\n};\r\n\r\nconst deleteContact = contactId => async dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  try {\r\n    await axios.delete(`/contacts/${contactId}`);\r\n\r\n    dispatch(deleteContactSuccess(contactId));\r\n  } catch (error) {\r\n    dispatch(deleteContactError(error));\r\n  }\r\n};\r\n\r\nexport default { fetchContacts, addContact, deleteContact };\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getLoading = state => state.loading;\r\nconst getExistContacts = state => state.contacts.items;\r\nconst getFilter = state => state.contacts.filter;\r\nconst getContactsListToShow = createSelector(\r\n  [getExistContacts, getFilter],\r\n  (items, filter) => {\r\n    if (filter === '') {\r\n      return items;\r\n    } else {\r\n      return items.filter(item =>\r\n        item.name.toUpperCase().includes(filter.toUpperCase()),\r\n      );\r\n    }\r\n  },\r\n);\r\n\r\nexport default { getLoading, getExistContacts, getContactsListToShow };\r\n","const isUnique = (contacts, searchName) => {\r\n  console.log(contacts);\r\n  if (\r\n    contacts.find(({ name }) => name.toUpperCase() === searchName.toUpperCase())\r\n  ) {\r\n    return false;\r\n  } else {\r\n    return true;\r\n  }\r\n};\r\n\r\nexport default isUnique;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { itemsOperations, itemsSelectors } from '../../redux/items';\r\n\r\nimport isUnique from '../../functions/isUnique';\r\n\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  static defaultProps = {\r\n    existContacts: [],\r\n  };\r\n\r\n  static propTypes = {\r\n    existContacts: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n      }),\r\n    ),\r\n    onAdd: PropTypes.func,\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { name, number } = this.state;\r\n    const { onAdd, existContacts } = this.props;\r\n\r\n    if (!isUnique(existContacts, this.state.name)) {\r\n      return alert(`${this.state.name} is already in contacts!`);\r\n    } else {\r\n      onAdd({ name, number });\r\n\r\n      this.reset();\r\n    }\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={styles.form_contact} onSubmit={this.handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"name\" className={styles.label_contact}>\r\n            Name\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className={styles.input_contact}\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            placeholder=\"Enter name\"\r\n            onChange={this.handleChange}\r\n            required\r\n          ></input>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"phone\" className={styles.label_contact}>\r\n            Phone\r\n          </label>\r\n          <input\r\n            type=\"tel\"\r\n            className={styles.input_contact}\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            placeholder=\"Enter phone XXX-XX-XX\"\r\n            pattern=\"^(\\d{3})-\\d{2}-\\d{2}$\"\r\n            onChange={this.handleChange}\r\n            required\r\n          ></input>\r\n        </div>\r\n        <button\r\n          type=\"submit\"\r\n          className={styles.btn_add}\r\n          onSubmit={this.handleSubmit}\r\n        >\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  existContacts: itemsSelectors.getExistContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onAdd: newContact => dispatch(itemsOperations.addContact(newContact)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import filterActions from './filter-actions';\r\n\r\nconst filterContacts = filter => dispatch => {\r\n  dispatch(filterActions.filterContacts(filter));\r\n};\r\n\r\nexport default { filterContacts };\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { filterOperations } from '../../redux/filter/';\r\n\r\nimport styles from './Filter.module.css';\r\n\r\nclass Filter extends Component {\r\n  static propTypes = {\r\n    onSearch: PropTypes.func.isRequired,\r\n  };\r\n\r\n  render() {\r\n    const { onSearch } = this.props;\r\n    return (\r\n      <form className={styles.form_search}>\r\n        <label htmlFor=\"filter\" className={styles.label_search}>\r\n          Find contacts by name\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          className={styles.input_search}\r\n          placeholder=\"Enter the name\"\r\n          onChange={onSearch}\r\n        ></input>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSearch: event =>\r\n    dispatch(filterOperations.filterContacts(event.currentTarget.value)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Filter);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { itemsOperations, itemsSelectors } from '../../redux/items';\r\n\r\nimport styles from './ContactList.module.css';\r\n\r\nclass ContactList extends Component {\r\n  static defaultProps = {\r\n    existContacts: [],\r\n  };\r\n\r\n  static propTypes = {\r\n    existContacts: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n      }),\r\n    ),\r\n    onDelete: PropTypes.func,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n\r\n  render() {\r\n    const { existContacts } = this.props;\r\n    const { onDelete } = this.props;\r\n    if (existContacts.length === 0) {\r\n      return <div>There are no contacts</div>;\r\n    } else {\r\n      return (\r\n        <ul className={styles.contact_list}>\r\n          {existContacts.map(contact => (\r\n            <Contact\r\n              key={contact.id}\r\n              id={contact.id}\r\n              name={contact.name}\r\n              number={contact.number}\r\n              onDelete={onDelete}\r\n            />\r\n          ))}\r\n        </ul>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nclass Contact extends Component {\r\n  static defaultProps = {\r\n    id: '',\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  static propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    onDelete: PropTypes.func,\r\n  };\r\n\r\n  handleDelete = e => {\r\n    const { onDelete } = this.props;\r\n    const contactId = e.target.parentNode.id;\r\n    onDelete(contactId);\r\n  };\r\n\r\n  render() {\r\n    const { id, name, number } = this.props;\r\n    return (\r\n      <li className={styles.contact_item} id={id}>\r\n        {' '}\r\n        {name} : {number}\r\n        <button\r\n          type=\"button\"\r\n          className={styles.btn_delete}\r\n          onClick={this.handleDelete}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  existContacts: itemsSelectors.getContactsListToShow(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchContacts: () => dispatch(itemsOperations.fetchContacts()),\r\n  onDelete: contactId => dispatch(itemsOperations.deleteContact(contactId)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport ContactForm from '../components/ContactForm';\r\nimport Filter from './Filter';\r\nimport ContactList from '../components/ContactList';\r\n\r\nimport { itemsSelectors } from '../redux/items';\r\n\r\nimport styles from './App.module.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className={styles.app}>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm />\r\n        <h2>Contacts</h2>\r\n        <Filter />\r\n        {this.props.isLoadingContacts && <h1>Loading...</h1>}\r\n        <ContactList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  isLoadingContacts: itemsSelectors.getLoading(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(App);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\n\nimport store from './redux/store';\nimport App from './components/App';\n\nimport 'modern-normalize';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// ========Persist=====================\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <Provider store={store.store}>\n//       <PersistGate loading={null} persistor={store.persistor}>\n//         <App />\n//       </PersistGate>\n//     </Provider>\n//   </React.StrictMode>,\n//   document.getElementById('root'),\n// );\n"],"sourceRoot":""}